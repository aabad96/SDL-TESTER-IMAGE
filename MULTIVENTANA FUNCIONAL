//
//  main2.cpp
//  PRUEBA MULTIVENTANA
//
//  Created by Alejandro Abad Martínez on 15/6/16.
//  Copyright © 2016 Alejandro Abad Martínez. All rights reserved.
//

#include <iostream>
#include <fstream>
#include <string.h>
#include <SDL2/SDL.h>
#include <SDL2_image/SDL_image.h>
#include "Multiventana.h"


//Screen dimension constants
const int SCREEN_WIDTH = 791;
const int SCREEN_HEIGHT = 512;
/*
 srcrect.x = 0;
 srcrect.y = 0;
 srcrect.w = 3166;
 srcrect.h = 1534;
 dstrect.x = 0;
 dstrect.y = 77;
 dstrect.w = 791;
 dstrect.h = 435;
 */





SDL_Window* init_ventana(){
    
    //iniciamos flag
    SDL_Window* success = NULL;
    
    //inicializamos SDL
    if( SDL_Init( SDL_INIT_VIDEO ) < 0 ){
        printf( "SDL no pudo inicializarse! SDL_Error: %s\n", SDL_GetError() );
        
    }
    else
    {
        //Creamos ventana
        success = SDL_CreateWindow( "SDL ALEJANDRO", SDL_WINDOWPOS_UNDEFINED, SDL_WINDOWPOS_UNDEFINED, SCREEN_WIDTH, SCREEN_HEIGHT, SDL_WINDOW_SHOWN );
        
    }
    return success;
}
//imagen que se va a pasar
SDL_Surface* loadMedia_gtool()
{
    //imagen que se va a pasar
    SDL_Surface* gtool ;
    
    //cargamos imagenes
    gtool = IMG_Load("toolbar");
    return gtool;
}

//imagen que se va a pasar
SDL_Surface* loadMedia_gradiografia(const char *range)
{
    //imagen que se va a pasar
    SDL_Surface* gradiografia;
    
    //cargamos imagenes
    
    gradiografia = IMG_Load(range);
    
    if (gradiografia==NULL) {
        std::cout<<"sere fea"<<std::endl;
    }
    return gradiografia;
}

SDL_Texture* textura_gradiografia(SDL_Renderer* render, const char *range){
    //surface de la ventana
    SDL_Surface* media_gradiografia;
    
   
    SDL_Texture* t_gradiografia=NULL;
    
    media_gradiografia=loadMedia_gradiografia(range);
    
    
    if (media_gradiografia==NULL) {
        std::cout<< "Error no se pudo cargar la imagen1"<<std::endl;
    }else t_gradiografia= SDL_CreateTextureFromSurface(render, media_gradiografia);
    
    SDL_FreeSurface(media_gradiografia);
    return t_gradiografia;
    
}SDL_Texture* textura_gtool(SDL_Renderer* render){
    SDL_Surface* media_gtool=NULL;
     SDL_Texture* t_gtool=NULL;
    media_gtool=loadMedia_gtool();
    
    if (media_gtool==NULL){
        std::cout<< "Error no se pudo cargar la imagen2"<<std::endl;
    }
    t_gtool= SDL_CreateTextureFromSurface(render, media_gtool);
    SDL_FreeSurface(media_gtool);
    return t_gtool;
}


void cargar_texturas( SDL_Texture* text_gradiografia, SDL_Texture* text_gtool, SDL_Rect * srcrect,  SDL_Rect * dstrect)
{
    SDL_Renderer* rend=NULL;
    SDL_Window* ventana=NULL;
    SDL_Texture* t_gradiografia=NULL;
    SDL_Texture* t_gtool=NULL;
    ventana=init_ventana();
    
    rend= SDL_CreateRenderer(ventana, -1, SDL_RENDERER_ACCELERATED | SDL_RENDERER_PRESENTVSYNC);
    t_gtool=textura_gtool(rend);
    t_gradiografia=textura_gradiografia(rend, "/Users/Alejandro/Desktop/ARCHIVOS DE XCODE/PRUEBA_MULTIVENTANA_DEFINITIVA-hhgvbailkmdwafhhrnucwdwupann/Build/Products/Debug/prueba.bmp");
    
    SDL_RenderClear(rend);
    SDL_RenderCopy(rend,t_gtool , NULL, NULL);
    SDL_RenderCopy(rend, t_gradiografia, srcrect, dstrect);
    SDL_RenderPresent(rend);
    
    
}
int main ()
